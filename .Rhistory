g <- graph_from_literal(1-2, 1-3, 2-3, 2-4, 3-5, 4-5, 4-6, 4-7, 5-6, 6-7)
library('igraph')
g <- graph_from_literal(1-2, 1-3, 2-3, 2-4, 3-5, 4-5, 4-6, 4-7, 5-6, 6-7)
g
plot(g)
V(g)
E(g)
gd <- graf_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
gd <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
gd
plot(gd)
plot(gd, edge.arro.size=0.5)
plot(gd, edge.arro.size=0.01)
plot(gd, edge.arrow.size=0.5)
plot(gd, edge.arrow.size=0.1)
plot(gd, arrow.size=0.1)
plot(gd, edge.arrow.size=0.1)
gd_lab <- graph_from_literal(A-+B, A-+C, B++C, D++A, D+-C, E-+A)
plot(gd_lab)
plot(gd_lab, edge.arrow.size=0.1
)
gd_lab <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
plot(gd_lab, edge.arrow.size=0.1)
V(gd_lab)$name <- c("A", "B", "C", "D", "E")
plot(gd_lab, edge.arrow.size=0.1)
plot(gd_lab, edge.arrow.size=0.15)
plot(gd_lab, edge.arrow.size=0.12)
gd_iso <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1, 6)
plot(gd_iso, edge.arrow.size = 0.12)
gd_2comp <- graph_from_literal(1-+2:3:4, 2++3, 3-+4, 5-+1, 6++7:8)
plot(gd_2comp, edge.arrow.size = 0.12)
components(gd_2comp)
vcount(gd_2comp)
ecount(gd_2comp)
is.directed(gd_2)
is.directed(gd_2comp)
?par
plot(gd_2comp)
gd_2comp <- graph_from_literal(1-+2:4, 2++3, 3-+4, 5-+1, 6++7:8)
library('igraph')
gd_2comp <- graph_from_literal(1-+2:4, 2++3, 3-+4, 5-+1, 6++7:8)
plot(gd_2comp)
plot(gd_2comp, edge.arrow.size <- 0.12)
plot(gd_2comp, edge.arrow.size = 0.12)
plot(as.undirected(gd_2comp, mode = "collapse"), edge.arrow.size = 0.13)
plot(as.undirected(gd_2comp, mode = "collapse"))
plot(as.undirected(gd_2comp, mode = "mutual"))
dev.new()
plot(gd_2comp, edge.arrow.size = 0.12)
plot(as.undirected(gd_2comp, mode = "collapse"))
plot(as.undirected(gd_2comp, mode = "mutual"))
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
plot(gd_2comp, edge.arrow.size = 0.12)
plot(as.undirected(gd_2comp, mode = "collapse"))
plot(as.undirected(gd_2comp, mode = "mutual"))
plot(as.undirected(gd_2comp, mode = "each"))
?par
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
boxplot(gd_2comp, edge.arrow.size = 0.12)
boxplot(as.undirected(gd_2comp, mode = "collapse"))
boxplot(as.undirected(gd_2comp, mode = "mutual"))
boxplot(as.undirected(gd_2comp, mode = "each"))
boxplot(gd_2comp, edge.arrow.size = 0.12)
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
plot(gd_2comp, edge.arrow.size = 0.12)
box()
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
plot(gd_2comp, edge.arrow.size = 0.12)
box()
plot(as.undirected(gd_2comp, mode = "collapse"))
box()
plot(as.undirected(gd_2comp, mode = "mutual"))
box()
plot(as.undirected(gd_2comp, mode = "each"))
box()
?plot
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
plot(gd_2comp, edge.arrow.size = 0.12, main = "directed")
box()
plot(as.undirected(gd_2comp, mode = "collapse", main = "collapse"))
box()
plot(as.undirected(gd_2comp, mode = "mutual", main = "mutual"))
box()
plot(as.undirected(gd_2comp, mode = "each", main = "each"))
box()
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
plot(gd_2comp, edge.arrow.size = 0.12, main = "directed")
box()
plot(as.undirected(gd_2comp, mode = "collapse"), main = "collapse")
box()
plot(as.undirected(gd_2comp, mode = "mutual"), main = "mutual")
box()
plot(as.undirected(gd_2comp, mode = "each"), main = "each")
box()
?V
# Load igraph library
library('igraph')
# create a simple undirected graph
g <- graph_from_literal(1-2, 1-3, 2-3, 2-4, 3-5, 4-5, 4-6, 4-7, 5-6, 6-7)
# plot the graph
plot(g)
# display vertices
V(g)
# display edges
E(g)
# createa simple directed graph
gd <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
# plot the directed graph with reasonable arrow dimension
plot(gd, edge.arrow.size=0.1)
# another directed graph example
gd_lab <- graph_from_literal(A-+B, A-+C, B++C, D++A, D+-C, E-+A)
plot(gd_lab, edge.arrow.size=0.1)
# yet another example using labels
gd_lab <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
plot(gd_lab, edge.arrow.size=0.1)
# set vertices labels
V(gd_lab)$name <- c("A", "B", "C", "D", "E")
plot(gd_lab, edge.arrow.size=0.12)
# a graph wihth isolated vertices
gd_iso <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1, 6)
plot(gd_iso, edge.arrow.size = 0.12)
# a graph with 2 different components
gd_2comp <- graph_from_literal(1-+2:4, 2++3, 3-+4, 5-+1, 6++7:8)
plot(gd_2comp, edge.arrow.size = 0.12)
# enumerate the components
components(gd_2comp)
# count number of vertices
vcount(gd_2comp)
# count number of edges
ecount(gd_2comp)
# check if graph is directed
is.directed(gd_2comp)
# set a 2x2 layout for aligned plots
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
# plot graph as is, i.e. directed
plot(gd_2comp, edge.arrow.size = 0.12, main = "directed")
box()
# plot graph as indirected by collapse
plot(as.undirected(gd_2comp, mode = "collapse"), main = "collapse")
box()
# plot graph as indirected by mutual
plot(as.undirected(gd_2comp, mode = "mutual"), main = "mutual")
box()
# plot graph as indirected by each
plot(as.undirected(gd_2comp, mode = "each"), main = "each")
box()
# Load igraph library
library('igraph')
# create a simple undirected graph
g <- graph_from_literal(1-2, 1-3, 2-3, 2-4, 3-5, 4-5, 4-6, 4-7, 5-6, 6-7)
# plot the graph
plot(g)
# display vertices
V(g)
# display edges
E(g)
# createa simple directed graph
gd <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
# plot the directed graph with reasonable arrow dimension
plot(gd, edge.arrow.size=0.1)
# another directed graph example
gd_lab <- graph_from_literal(A-+B, A-+C, B++C, D++A, D+-C, E-+A)
plot(gd_lab, edge.arrow.size=0.1)
# yet another example using labels
gd_lab <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1)
plot(gd_lab, edge.arrow.size=0.1)
# set vertices labels
V(gd_lab)$name <- c("A", "B", "C", "D", "E")
plot(gd_lab, edge.arrow.size=0.12)
# a graph wihth isolated vertices
gd_iso <- graph_from_literal(1-+2, 1-+3, 2++3, 4++1, 4+-3, 5-+1, 6)
plot(gd_iso, edge.arrow.size = 0.12)
# a graph with 2 different components
gd_2comp <- graph_from_literal(1-+2:4, 2++3, 3-+4, 5-+1, 6++7:8)
plot(gd_2comp, edge.arrow.size = 0.12)
# enumerate the components
components(gd_2comp)
# count number of vertices
vcount(gd_2comp)
# count number of edges
ecount(gd_2comp)
# check if graph is directed
is.directed(gd_2comp)
# set a 2x2 layout for aligned plots
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
# plot graph as is, i.e. directed
plot(gd_2comp, edge.arrow.size = 0.12, main = "directed")
box()
# plot graph as indirected by collapse
plot(as.undirected(gd_2comp, mode = "collapse"), main = "collapse")
box()
# plot graph as indirected by mutual
plot(as.undirected(gd_2comp, mode = "mutual"), main = "mutual")
box()
# plot graph as indirected by each
plot(as.undirected(gd_2comp, mode = "each"), main = "each")
box()
# set a 1x3 layout for aligned plots
par(mfrow = c(1, 3), mar = c(1, 1, 1, 1))
# plot undirected graph as is
plot(g)
# plot undirected graph as directed by mutual
plot(as.directed(g, mode = 'mutual'), edge.arrow.size = 0.13)
box()
# set a 1x3 layout for aligned plots
par(mfrow = c(1, 3), mar = c(1, 1, 1, 1))
# plot undirected graph as is
plot(g, main = 'undirected')
box()
# plot undirected graph as directed by mutual
plot(as.directed(g, mode = 'mutual'), edge.arrow.size = 0.13, main = 'mutual')
box()
# plot undirected graph as directed by arbitrary
plot(as.directed(g, mode = 'arbitrary'), edge.arrow.size = 0.13, main = 'arbitrary')
box()
# Matrix representation
Y <- get.adjacency(g)
Y
# set diagonal as NA
diag(Y) = NA
Y
# Create a matrix from scratch
Y = matrix(0, 7, 7)
tmp = c(1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1)
# For undirected matrix only a lower (or upper) triangle is needed
Y[lower.tri(Y)] = tmp
# Then replicate on the upper triangle
Y <- Y + t(Y)
Y
# Create a matrix from scratch
Y <- matrix(0, 7, 7)
tmp = c(1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1)
# For undirected matrix only a lower (or upper) triangle is needed
Y[lower.tri(Y)] <- tmp
# Then replicate on the upper triangle
Y <- Y + t(Y)
diag(Y) <- NA
Y
# Is the matrix simmetric?
sum(Y != t(Y), na.rm = TRUE)
# Is the matrix simmetric?
sum(Y != t(Y), na.rm = TRUE) == 0
diag(Yd) = NA
Yd <- matrix(tmp, 5, 5)
# Now let's buil a directed graph by a asimmetric matrix
tmp <- c(0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0)
Yd <- matrix(tmp, 5, 5)
diag(Yd) = NA
# Is the matrix simmetric?
sum(Y != t(Y), na.rm = TRUE) == 0
# Is the matrix simmetric?
sum(Yd != t(Yd), na.rm = TRUE) == 0
# from matrix to graph
g2 <- graph_from_adjacency_matrix(Y, mode = "undirected")
gd2 <- graph_from_adjacency_matrix(Yd, mode = "directed")
# from matrix to graph
g2 <- graph_from_adjacency_matrix(Y, mode = "undirected")
gd2 <- graph_from_adjacency_matrix(Yd, mode = "directed")
# plot the resultin graphs
par(mfrow = c(2,2), mar = c(1,1,1,1))
plot(g, main = 'undirected 1')
box()
plot(g2, main = 'undirected 2')
box()
plot(gd, main = 'directed 1')
box()
plot(gd2, main = 'directed 2')
box()
# from matrix to graph
g2 <- graph_from_adjacency_matrix(Y, mode = "undirected")
gd2 <- graph_from_adjacency_matrix(Yd, mode = "directed")
# plot the resultin graphs
par(mfrow = c(2,2), mar = c(1,1,1,1))
plot(g, main = 'undirected 1')
box()
plot(g2, main = 'undirected 2')
box()
plot(gd, edge.arrow.size = 0.13, main = 'directed 1')
box()
plot(gd2, edge.arrow.size = 0.13, main = 'directed 2')
box()
# Create a weighted graph from the adjacency matrix
tmp <- c(0, 0, 3, 1, 0, 1, 0, 2, 0, 0, 1, 3, 0, 0, 0, 4, 0, 2, 0, 0, 5, 0, 0, 0, 1)
Yd <- matrix(tmp, 5, 5)
diag(Yd) <- NA
wg <- graph_from_adjacency_matrix(Yd, mode = "directed", weighted = T, diag = F)
wg
# let us give a label to the vertices of wg
V(wg)$name = c("Pippo", "Pluto", "Paperino", "Cip", "Ciop")
# let us give a name to the graph
wg$name = "Disney"
# plot
plot(wg)
# plot
plot(wg, edge.arrow.size = 0.13)
# plot
par(mfrow = c(1,1))
plot(wg, edge.arrow.size = 0.13)
